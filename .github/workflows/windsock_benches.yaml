name: Windsock Benches

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

# Cancel already running jobs
concurrency:
  group: windsock_benches_${{ github.head_ref }}
  cancel-in-progress: true

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1

jobs:
  windsock_benches:
    name: "Windsock benches"
    runs-on: ubuntu-22.04
    steps:
    - uses: actions/checkout@v3
    - uses: Swatinem/rust-cache@v2
      with:
        # this line means that only the main branch writes to the cache
        # benefits:
        # * prevents main branch caches from being evicted in favor of a PR cache
        # * saves about 1min per workflow by skipping the actual cache write
        # downsides:
        # * PRs that update rust version or changes deps will be slow to iterate on due to changes not being cached.
        save-if: ${{ github.ref == 'refs/heads/main' }}
    - name: Ensure that custom benches run
      run: |
        # This isnt needed locally because we run profilers via sudo.
        # But for some reason on CI even with sudo we didnt have access to perf events.
        echo '1' | sudo tee /proc/sys/kernel/perf_event_paranoid

        # run some extra cases that arent handled by nextest
        cargo windsock --bench-length-seconds 5 --operations-per-second 100 --profilers flamegraph --name cassandra,compression=none,driver=scylla,operation=read_i64,protocol=v4,shotover=standard,topology=single
        cargo windsock --bench-length-seconds 5 --operations-per-second 100 --profilers samply --name cassandra,compression=none,driver=scylla,operation=read_i64,protocol=v4,shotover=standard,topology=single
        cargo windsock --bench-length-seconds 5 --operations-per-second 100 --profilers sys_monitor --name kafka,shotover=standard,size=1B,topology=single

        # windsock/examples/cassandra.rs - this can stay here until windsock is moved to its own repo
        cargo run --release --example cassandra -- --bench-length-seconds 5 --operations-per-second 100
    - name: Ensure that tests did not create or modify any files that arent .gitignore'd
      run: |
        if [ -n "$(git status --porcelain)" ]; then
          git status
          exit 1
        fi
