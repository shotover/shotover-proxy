name: Testing

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

# Cancel already running jobs
concurrency:
  group: testing_${{ github.head_ref }}
  cancel-in-progress: true

env:
  CARGO_TERM_COLOR: always
  RUSTC_WRAPPER: sccache
  RUST_BACKTRACE: 1

jobs:
  build:
    strategy:
      matrix:
        include:
          - name: Release
            cargo_profile: --release
          - name: Debug
            cargo_profile:
    name: ${{ matrix.name }}
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v2
    - uses: actions/cache@v2
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo2-${{ hashFiles('**/Cargo.lock') }}
    - name: Install latest stable
      uses: actions-rs/toolchain@v1
      with:
          toolchain: stable
          override: true
    - name: Install sccache
      env:
        LINK: https://github.com/mozilla/sccache/releases/download
        SCCACHE_VERSION: 0.2.12
      run: |
        curl -L "$LINK/$SCCACHE_VERSION/sccache-$SCCACHE_VERSION-x86_64-unknown-linux-musl.tar.gz" | tar xz
        echo "$PWD/sccache-$SCCACHE_VERSION-x86_64-unknown-linux-musl/" >> $GITHUB_PATH
    - name: Install ubuntu packages
      run: |
        sudo apt-get update
        sudo apt-get install -y libpcap-dev
    - name: Start sccache
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        SCCACHE_BUCKET: shotover-build-caches
        SCCACHE_IDLE_TIMEOUT: 0
      run: sccache --start-server
    - name: Configure sscache
      run: echo "" >> .cargo/config && echo "[build]" >> .cargo/config && echo "rustc-wrapper = \"$(which sccache)\"" >> .cargo/config && cat .cargo/config
    - name: Check `cargo fmt` was run
      run: cargo fmt --all -- --check
    - name: Build
      run: cargo build ${{ matrix.cargo_profile }} --all-targets
    - name: Run tests
      run: cargo test ${{ matrix.cargo_profile }} -- --include-ignored --show-output
      timeout-minutes: 30
    - name: Cleanup docker
      run: shotover-proxy/tests/scripts/teardown.sh
    - name: License Check
      run: |
        cargo install --locked cargo-deny
        cargo deny check licenses
      if: ${{ matrix.name == 'Debug' }}
