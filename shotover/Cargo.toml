[package]
name = "shotover"
version = "0.1.11"
authors = ["Ben <ben@instaclustr.com>"]
edition = "2021"
license = "Apache-2.0"
repository = "https://github.com/shotover/shotover-proxy"
description = "Shotover API for building custom transforms"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[features]
# Include WIP alpha transforms in the public API
alpha-transforms = []

[dependencies]
atomic_enum = "0.2.0"
pretty-hex = "0.3.0"
tokio-stream = "0.1.2"
bytes-utils = "0.1.1"
derivative = "2.1.1"
cached = { version = "0.46", features = ["async"] }
async-recursion = "1.0"
governor = { version = "0.6", default-features = false, features = ["std", "jitter", "quanta"] }
nonzero_ext = "0.3.0"
version-compare = "0.1"
rand = { features = ["small_rng"], workspace = true }
lz4_flex = "0.11.0"
clap.workspace = true
itertools.workspace = true
rand_distr.workspace = true
bytes.workspace = true
futures.workspace = true
tokio.workspace = true
tokio-util.workspace = true
csv.workspace = true
hex.workspace = true
hex-literal.workspace = true
async-trait.workspace = true
typetag.workspace = true
tokio-tungstenite = "0.20.0"

# Error handling
thiserror = "1.0"
anyhow.workspace = true
backtrace = "0.3.66"
backtrace-ext = "0.2"

# Parsers
cql3-parser = "0.4.0"
serde.workspace = true
serde_json.workspace = true
serde_yaml.workspace = true
bincode.workspace = true
num = { version = "0.4.0", features = ["serde"] }
uuid.workspace = true
bigdecimal = { version = "0.4.0", features = ["serde"] }
base64 = "0.21.0"
httparse = "1.8.0"
http = "0.2.9"

#Observability
metrics = "0.21.0"
metrics-exporter-prometheus = "0.12.0"
tracing.workspace = true
tracing-subscriber.workspace = true
tracing-appender.workspace = true
hyper = { version = "0.14.14", features = ["server"] }
halfbrown = "0.2.1"

# Transform dependencies
redis-protocol.workspace = true
cassandra-protocol.workspace = true
crc16 = "0.4.0"
ordered-float.workspace = true

#Crypto
aws-config = "0.56.0"
aws-sdk-kms = "0.30"
strum_macros = "0.25"
chacha20poly1305 = { version = "0.10.0", features = ["std"] }
generic-array = { version = "0.14", features = ["serde"] }
kafka-protocol = "0.7.0"
# dangerous_configuration is used to implement equivalent functionality to openssl `verify_hostname(false)`
#
# verify_hostname(false) like functionality can be useful when you're forced to use a particular domain name and it's impractical to generate a fresh certificate with that domain name
# e.g. we generate a huge pool of certificates up front (to handle bursts given the Let's Encrypt rate limiting),
# and later assign them to clusters, so the certificates have a fixed set of domains baked in.
rustls = { version = "0.21.0", features = ["dangerous_configuration"] }
tokio-rustls = "0.24"
rustls-pemfile = "1.0.2"
string = "0.3.0"
xxhash-rust = { version = "0.8.6", features = ["xxh3"] }
dashmap = "5.4.0"
atoi = "2.0.0"

[dev-dependencies]
criterion = { version = "0.5.0", features = ["async_tokio"] }

[[bench]]
name = "benches"
harness = false
